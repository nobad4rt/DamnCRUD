name: Integration Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Memungkinkan menjalankan workflow secara manual dari UI GitHub

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Setup MySQL untuk testing
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: damncrud
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout kode
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
    
    - name: Import database
      run: mysql -h 127.0.0.1 -u root -proot123 damncrud < db/damncrud.sql
    
    - name: Setup Apache
      run: |
        sudo apt-get update
        sudo apt-get install apache2 libapache2-mod-php7.4
        sudo a2enmod php7.4
        sudo a2enmod rewrite
        sudo a2enmod headers
        sudo systemctl start apache2
        
        # Siapkan direktori di Apache
        sudo mkdir -p /var/www/html/DamnCRUD
        sudo cp -r $(pwd)/* /var/www/html/DamnCRUD/
        
        # Berikan izin yang benar
        sudo chown -R www-data:www-data /var/www/html/DamnCRUD
        sudo chmod -R 755 /var/www/html/DamnCRUD
        
        # Berikan izin lebih untuk file yang membutuhkan operasi tulis
        sudo chmod -R 777 /var/www/html/DamnCRUD/ss_test
        
        # Pastikan .htaccess aktif
        sudo sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
        sudo systemctl reload apache2
        
        # Buat site config khusus
        echo -e "<VirtualHost *:80>\n\tServerName localhost\n\tDocumentRoot /var/www/html\n\t<Directory /var/www/html>\n\t\tOptions Indexes FollowSymLinks MultiViews\n\t\tAllowOverride All\n\t\tRequire all granted\n\t</Directory>\n</VirtualHost>" | sudo tee /etc/apache2/sites-available/000-default.conf
        sudo systemctl reload apache2
        
        # Periksa apakah Apache berfungsi dan folder dapat diakses
        ls -la /var/www/html/DamnCRUD/
        curl -I http://localhost/DamnCRUD/
    
    - name: Sesuaikan koneksi database
      run: |
        sudo sed -i 's/$DATABASE_HOST = .\+/$DATABASE_HOST = "127.0.0.1";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_USER = .\+/$DATABASE_USER = "root";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_PASS = .\+/$DATABASE_PASS = "root123";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_NAME = .\+/$DATABASE_NAME = "damncrud";/' /var/www/html/DamnCRUD/functions.php
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependensi Python
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-html pytest-xdist selenium webdriver-manager
    
    - name: Setup Firefox sebagai browser utama
      run: |
        sudo apt-get update
        # Menggunakan Firefox standard
        sudo apt-get install -y firefox
        firefox --version

    - name: Setup Firefox GeckoDriver
      run: |
        # Unduh GeckoDriver terbaru
        wget https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz
        tar -xzf geckodriver-v0.33.0-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/geckodriver
        # Cetak versi untuk debugging
        geckodriver --version
        # Set variabel lingkungan untuk path GeckoDriver
        echo "GECKODRIVER_PATH=/usr/local/bin/geckodriver" >> $GITHUB_ENV

    - name: Buat struktur folder screenshot
      run: |
        mkdir -p ss_test/login
        mkdir -p ss_test/create
        mkdir -p ss_test/update
        mkdir -p ss_test/delete
        mkdir -p ss_test/common
        sudo chmod -R 777 ss_test
    
    - name: Debug server
      run: |
        # Verifikasi Apache berjalan
        sudo systemctl status apache2
        
        # Cek error log Apache
        sudo tail -n 50 /var/log/apache2/error.log
        
        # Cek akses file login.php
        ls -la /var/www/html/DamnCRUD/login.php
        sudo cat /var/www/html/DamnCRUD/login.php | head -n 10
        
        # Cek akses ke halaman login
        curl -v http://localhost/DamnCRUD/login.php
    
    - name: Jalankan test
      env:
        CI: true
        BROWSER: firefox
      run: |
        # Atur display virtual untuk browser
        export DISPLAY=:99
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        
        # Set BASE_URL di test_integration.py
        sed -i 's|BASE_URL = "http://localhost/DamnCRUD"|BASE_URL = "http://localhost/DamnCRUD"|g' test_integration.py

        # Cetak path untuk debugging
        which firefox
        which geckodriver
        
        # Jalankan test secara sequential (tanpa paralel) untuk menghindari konflik
        python -m pytest test_integration.py -v --html=report.html --self-contained-html
    
    - name: Simpan bukti screenshot
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots
        path: 'ss_test/**/*.png'
    
    - name: Simpan laporan test
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: report.html 