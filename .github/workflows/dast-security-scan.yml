name: DAST Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    
    # Menambahkan izin khusus untuk job ini
    permissions:
      contents: read
      issues: write
      security-events: write
    
    steps:
    - name: Checkout kode
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl, pdo_mysql
    
    - name: Setup MySQL
      run: |
        sudo systemctl start mysql
        mysql -e "CREATE DATABASE IF NOT EXISTS damncrud;" -uroot -proot
        mysql -e "CREATE USER IF NOT EXISTS 'damncrud'@'localhost' IDENTIFIED BY 'damncrud123';" -uroot -proot
        mysql -e "GRANT ALL PRIVILEGES ON damncrud.* TO 'damncrud'@'localhost';" -uroot -proot
        mysql -uroot -proot damncrud < db/damncrud.sql
    
    - name: Setup Apache
      run: |
        sudo apt-get update
        sudo apt-get install apache2 libapache2-mod-php7.4
        sudo a2enmod php7.4
        sudo a2enmod rewrite
        sudo a2enmod headers
        sudo systemctl start apache2
        
        # Siapkan direktori di Apache
        sudo mkdir -p /var/www/html/DamnCRUD
        sudo cp -r $(pwd)/* /var/www/html/DamnCRUD/
        
        # Berikan izin yang benar
        sudo chown -R www-data:www-data /var/www/html/DamnCRUD
        sudo chmod -R 755 /var/www/html/DamnCRUD
        
        # Pastikan .htaccess aktif
        sudo sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
        sudo systemctl reload apache2
        
        # Buat site config khusus
        echo -e "<VirtualHost *:80>\n\tServerName localhost\n\tDocumentRoot /var/www/html\n\t<Directory /var/www/html>\n\t\tOptions Indexes FollowSymLinks MultiViews\n\t\tAllowOverride All\n\t\tRequire all granted\n\t</Directory>\n</VirtualHost>" | sudo tee /etc/apache2/sites-available/000-default.conf
        sudo systemctl reload apache2
        
        # Periksa apakah Apache berfungsi dan folder dapat diakses
        ls -la /var/www/html/DamnCRUD/
        curl -I http://localhost/DamnCRUD/
    
    - name: Sesuaikan koneksi database
      run: |
        sudo sed -i 's/$DATABASE_HOST = .\+/$DATABASE_HOST = "localhost";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_USER = .\+/$DATABASE_USER = "damncrud";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_PASS = .\+/$DATABASE_PASS = "damncrud123";/' /var/www/html/DamnCRUD/functions.php
        sudo sed -i 's/$DATABASE_NAME = .\+/$DATABASE_NAME = "damncrud";/' /var/www/html/DamnCRUD/functions.php
    
    - name: Verifikasi aplikasi berjalan
      run: |
        # Verifikasi Apache berjalan
        sudo systemctl status apache2
        
        # Cek error log Apache
        sudo tail -n 50 /var/log/apache2/error.log
        
        # Cek akses ke halaman login
        curl -v http://localhost/DamnCRUD/login.php
        
    - name: Persiapan Direktori Kerja ZAP
      run: |
        echo "Menyiapkan direktori kerja untuk ZAP..."
        # Buat direktori kerja dengan izin penuh
        sudo mkdir -p $(pwd)/zap_wrk
        sudo chmod -R 777 $(pwd)/zap_wrk
        # Buat subdirektori yang diperlukan
        sudo mkdir -p $(pwd)/zap_wrk/output
        sudo chmod -R 777 $(pwd)/zap_wrk/output
        ls -la $(pwd)/zap_wrk
        
        # Buat direktori untuk menyimpan laporan
        sudo mkdir -p $(pwd)/zap_reports
        sudo chmod -R 777 $(pwd)/zap_reports
      
    - name: Jalankan ZAP Baseline Scan dengan Docker
      run: |
        echo "Menjalankan ZAP Baseline Scan sebagai root user..."
        
        docker pull ghcr.io/zaproxy/zaproxy:stable
        
        # Dapatkan IP host
        HOST_IP=$(hostname -I | awk '{print $1}')
        echo "Host IP: $HOST_IP"
        
        docker run --user root --rm -v "$(pwd)/zap_wrk:/zap/wrk:rw" -v "$(pwd)/zap_reports:/zap/reports:rw" \
          --network host \
          -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
          -t http://localhost/DamnCRUD/ \
          -g zap_reports/baseline-report.html \
          -x zap_reports/baseline-report.xml \
          -J zap_reports/baseline-report.json \
          -j zap_reports/baseline-report.md \
          -a
          
        echo "ZAP Baseline Scan selesai. Memeriksa hasil..."
        ls -la $(pwd)/zap_reports
        
    - name: Jalankan Nikto Scan
      run: |
        echo "Menjalankan pemindaian Nikto..."
        # Instal Nikto
        sudo apt-get update
        sudo apt-get install -y nikto
        
        # Buat direktori untuk laporan Nikto
        mkdir -p nikto_reports
        
        # Jalankan Nikto scan
        nikto -h http://localhost/DamnCRUD/ -output nikto_reports/nikto-report.html -Format htm
        nikto -h http://localhost/DamnCRUD/ | tee nikto_reports/nikto-output.txt
        
        # Buat versi markdown dari hasil Nikto
        echo "# Hasil Pemindaian Nikto" > nikto_reports/nikto-report.md
        echo "Tanggal: $(date)" >> nikto_reports/nikto-report.md
        echo "" >> nikto_reports/nikto-report.md
        echo "## Ringkasan Temuan" >> nikto_reports/nikto-report.md
        echo '```' >> nikto_reports/nikto-report.md
        grep -E "^\+ " nikto_reports/nikto-output.txt >> nikto_reports/nikto-report.md
        echo '```' >> nikto_reports/nikto-report.md
        
        echo "## Detail Lengkap" >> nikto_reports/nikto-report.md
        echo '```' >> nikto_reports/nikto-report.md
        cat nikto_reports/nikto-output.txt >> nikto_reports/nikto-report.md
        echo '```' >> nikto_reports/nikto-report.md
        
        echo "Pemindaian Nikto selesai. Memeriksa hasil..."
        ls -la nikto_reports
      
    - name: Simpan laporan Nikto
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nikto-scan-reports
        path: nikto_reports/*
        
    - name: Simpan laporan ZAP
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-scan-reports
        path: |
          zap_reports/*
          
    - name: Buat GitHub Issue untuk Hasil ZAP Scan
      if: success() || failure()
      run: |
        # Setup GitHub CLI
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh
        
        # Autentikasi GitHub CLI
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
        
        # Buat label yang diperlukan
        gh label create "security" --description "Terkait keamanan aplikasi" --color "D93F0B" || true
        gh label create "dast-scan" --description "Hasil dari pemindaian DAST" --color "0075CA" || true
        gh label create "zap-scan" --description "Hasil dari pemindaian OWASP ZAP" --color "7057FF" || true
        gh label create "nikto-scan" --description "Hasil dari pemindaian Nikto" --color "5319E7" || true
        
        # Cek hasil ZAP Scan dan buat issue
        if [ -f "zap_reports/baseline-report.md" ]; then
          echo "Membuat issue untuk ZAP Baseline Scan..."
          
          # Tentukan judul issue
          ISSUE_TITLE="Hasil ZAP Baseline Scan - $(date +'%Y-%m-%d')"
          
          # Buat issue dengan lampiran laporan ZAP Baseline
          gh issue create \
            --title "$ISSUE_TITLE" \
            --body-file zap_reports/baseline-report.md \
            --label "security" --label "dast-scan" --label "zap-scan"
        else
          echo "File laporan ZAP Baseline tidak ditemukan."
        fi
        
        # Cek hasil Nikto Scan dan buat issue terpisah
        if [ -f "nikto_reports/nikto-report.md" ]; then
          echo "Membuat issue untuk Nikto Scan..."
          
          # Tentukan judul issue untuk Nikto
          ISSUE_TITLE="Hasil Nikto Scan - $(date +'%Y-%m-%d')"
          
          # Buat issue dengan lampiran laporan Nikto
          gh issue create \
            --title "$ISSUE_TITLE" \
            --body-file nikto_reports/nikto-report.md \
            --label "security" --label "dast-scan" --label "nikto-scan"
        else
          echo "File laporan Nikto tidak ditemukan."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 